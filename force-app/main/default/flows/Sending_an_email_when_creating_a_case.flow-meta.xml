<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Email_to_Customer</name>
        <label>Send Email to Customer</label>
        <locationX>50</locationX>
        <locationY>1055</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>support@ndax.io</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailTemplateId</name>
            <value>
                <elementReference>Get_Case_Created_Email_Template_Id.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientId</name>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>logEmailOnSend</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <actionCalls>
        <name>Send_Email_when_no_contact</name>
        <label>Send Email when no contact</label>
        <locationX>314</locationX>
        <locationY>1055</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>$Record.SuppliedEmail</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>noreply@ndax.io</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>subjectFormula</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>emailBodyFormula</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>63.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Add_groupId_to_groupIds</name>
        <label>Add groupId to groupIds</label>
        <locationX>402</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>groupIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>For_Each_Queue.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>For_Each_Queue</targetReference>
        </connector>
    </assignments>
    <constants>
        <name>createdCaseEmailTemplateName</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Case Created or Updated (Sample)</stringValue>
        </value>
    </constants>
    <decisions>
        <name>Send_Email</name>
        <label>Send Email?</label>
        <locationX>314</locationX>
        <locationY>947</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesSendEmail</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ContactId</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Contact.Email</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_User_s_Group_Member</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Email_to_Customer</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
        <rules>
            <name>No_Contact_send_email</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_User_s_Group_Member</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Email_when_no_contact</targetReference>
            </connector>
            <label>No Contact, send email</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>createdCaseEmailTemplateNameFormula</name>
        <dataType>String</dataType>
        <expression>IF(ISPICKVAL({!$Record.Origin}, &apos;Manual_Entry&apos;),&apos;Manual Case Created or Updated (Sample)&apos;, &apos;Case Created or Updated (Sample)&apos;)</expression>
    </formulas>
    <formulas>
        <name>emailBodyFormula</name>
        <dataType>String</dataType>
        <expression>IF(ISPICKVAL({!$Record.Origin},&apos;Manual_Entry&apos;), {!manualCaseEmailBody}, {!emailBody})</expression>
    </formulas>
    <formulas>
        <name>subjectFormula</name>
        <dataType>String</dataType>
        <expression>&quot;Request Received â€“ &quot; &amp; {!$Record.Subject} &amp; &quot; | Case ID: #&quot; &amp;  {!$Record.CaseNumber}</expression>
    </formulas>
    <interviewLabel>Sending an email when creating a case {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Sending an email when creating a case</label>
    <loops>
        <name>For_Each_Queue</name>
        <label>For Each Queue</label>
        <locationX>314</locationX>
        <locationY>431</locationY>
        <collectionReference>Get_Queues</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Add_groupId_to_groupIds</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Get_User_s_Group_Member</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Case_Created_Email_Template_Id</name>
        <label>Get Case Created Email Template Id</label>
        <locationX>314</locationX>
        <locationY>839</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Send_Email</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>createdCaseEmailTemplateNameFormula</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EmailTemplate</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queues</name>
        <label>Get Queues</label>
        <locationX>314</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>For_Each_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_User_s_Group_Member</name>
        <label>Get User&apos;s Group Member</label>
        <locationX>314</locationX>
        <locationY>731</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Case_Created_Email_Template_Id</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.CreatedById</elementReference>
            </value>
        </filters>
        <filters>
            <field>GroupId</field>
            <operator>In</operator>
            <value>
                <elementReference>groupIds</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Queues</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>ContactId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>SuppliedEmail</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>emailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Hello {!$Record.SuppliedName},&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Thank you for contacting NDAX Customer Support. This is an automated response to confirm that we have received your inquiry. Our team is working to address your request as quickly as possible.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Please do not reply to this email&lt;/strong&gt;, as it is sent from an unmonitored mailbox. To ensure your inquiry is handled promptly, please use the following methods to contact us:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Respond to original ticket email&amp;nbsp;&lt;/strong&gt;with any further questions or details. Please include case ID for reference.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Live Chat&lt;/strong&gt;: Available on our&amp;nbsp;&lt;a href=&quot;https://portal.ndax.io/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;website&lt;/a&gt;&amp;nbsp;during business hours (Monday to Friday, 10:00 AM â€“ 12:00 AM EST), where you can speak with a representative in real time.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Phone:&lt;/strong&gt; Call us at 1-833-727-6329, Monday to Friday between 10:00 AM â€“ 4:00 PM EST.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;We appreciate your patience and will respond to your inquiry soon.&lt;/p&gt;&lt;p&gt;Best regards,&lt;/p&gt;&lt;p&gt;&lt;strong&gt;The NDAX Customer Support Team&lt;/strong&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>manualCaseEmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;font-size: medium; font-family: Times; color: rgb(0, 0, 0);&quot;&gt;Hello {!$Record.SuppliedName},&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: medium; font-family: Times; color: rgb(0, 0, 0);&quot;&gt;Thank you for contacting us. We appreciate our customersâ€™ feedback and are here to help.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: medium; font-family: Times; color: rgb(0, 0, 0);&quot;&gt;Weâ€™re tracking your request in case #{!$Record.CaseNumber}. One of our team members will contact you shortly.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: medium; font-family: Times; color: rgb(0, 0, 0);&quot;&gt;Thank you,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: medium; font-family: Times; color: rgb(0, 0, 0);&quot;&gt;Ndax Canada Inc. Customer Service&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>groupIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>parentRecordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
